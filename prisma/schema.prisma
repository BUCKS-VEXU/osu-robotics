generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id             String           @id
  handle         String
  isExec         Boolean          @default(false)
  createdAt      DateTime         @default(now())
  avatarUrl      String?
  sessions       Session[]
  SessionEditLog SessionEditLog[]
}

model Location {
  id        String    @id
  name      String
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  sessions  Session[]
}

model Session {
  id             String           @id @default(cuid())
  memberId       String
  locationId     String
  checkInAt      DateTime         @default(now())
  checkOutAt     DateTime?
  notes          String?
  location       Location         @relation(fields: [locationId], references: [id])
  member         Member           @relation(fields: [memberId], references: [id])
  SessionEditLog SessionEditLog[]

  @@index([memberId, checkInAt])
  @@index([locationId, checkInAt])
}

model SessionEditLog {
  id        String    @id @default(cuid())
  sessionId String
  editorId  String // Member.id of the admin who edited
  beforeIn  DateTime?
  beforeOut DateTime?
  afterIn   DateTime?
  afterOut  DateTime?
  at        DateTime  @default(now())
  reason    String?

  session Session @relation(fields: [sessionId], references: [id])
  editor  Member  @relation(fields: [editorId], references: [id])

  @@index([sessionId, at])
  @@index([editorId, at])
}

model Settings {
  key      String  @id
  valueInt Int?
  valueStr String?
}

model Auth_Sessions {
  sid    String   @id @db.VarChar(255)
  sess   Json
  expire DateTime @db.Timestamp(6)
}
